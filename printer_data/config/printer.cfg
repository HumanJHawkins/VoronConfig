#####################################################################
#   Includes
#####################################################################
[include mainsail.cfg]
# [include BTT_SFSv2.0.cfg]

#####################################################################
#   Nevermore 
#####################################################################
## Slicer integration: Add "SET_FAN_SPEED FAN=nevermore_fan SPEED=1" in your start-macro
## (or less fan depending on your needs, like SPEED=0.8)
## in your end print code, add "UPDATE_DELAYED_GCODE ID=filter_off DURATION=180"
## this keeps your Nevermore running for 180s after the print finishes to clean the chamber a bit more.

[fan_generic nevermore_fan]
pin: PF7
max_power: 1.0
shutdown_speed: 0

[fan_generic motor_driver_fan]
pin: PF9
max_power: 1.0
shutdown_speed: 0

[menu __main __control __nevermoreonoff]
type: command
name: Nevermore {'ON' if printer['fan_generic nevermore_fan'].speed > 0 else 'OFF'}
enable: {'fan_generic nevermore_fan' in printer}
gcode:
    TOGGLE_NEVERMORE

[menu __main __control __filterspeed]
type: input
enable: {'fan_generic nevermore_fan' in printer}
name: Filter %: {'%3d' % (menu.input*100)}%
input: {printer["fan_generic nevermore_fan"].speed}
input_min: 0
input_max: 1
input_step: 0.1
gcode:
    SET_FAN_SPEED FAN=nevermore_fan SPEED={menu.input}


#####################################################################
#   Add Print Setup to the 
#####################################################################
[menu __main __setup __start_setup]
type: command
name: "Init All for Printing"
gcode:
  PRINT_START_SETUP

  
#####################################################################
#   Manta M8P v2.0
#####################################################################
[mcu]
canbus_uuid: d5a13834b5d7

[temperature_fan controller_fan]
pin: PF6
sensor_type: temperature_mcu
kick_start_time: 0.5
off_below: 0.1
max_power: 1.0
min_speed: 0
shutdown_speed: 0
min_temp: 0
max_temp: 85
target_temp: 45
control: pid
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0


[heater_fan fan_side_heater]
pin: PA6
tachometer_pin: PC2
heater: heater_bed
heater_temp: 50.0
fan_speed: 1.0


[temperature_sensor chamber]
sensor_type: PT1000
sensor_pin: PB0
pullup_resistor: 2200    # 4700 for PT100 (no jumper) or 2200 for PT1000 (jumper on Manta M8P)
min_temp: 0
max_temp: 100
gcode_id: C


#####################################################################
#   EBB SB2209 (RP2040) CANBUS
#####################################################################
[mcu EBBCan]
canbus_uuid: af0ddc15bc55

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio28

[extruder]
step_pin: EBBCan:gpio18
dir_pin: EBBCan:gpio19
enable_pin: !EBBCan:gpio17
microsteps: 16
rotation_distance:47.367
gear_ratio: 9:1
nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance: 0.032
max_extrude_only_velocity: 30
max_extrude_only_distance: 100
max_extrude_cross_section: 2.5
heater_pin: EBBCan:gpio7
min_temp: 0
max_temp: 300
sensor_type: MAX31865
sensor_pin: EBBCan:gpio9
spi_software_sclk_pin: EBBCan:gpio10
spi_software_mosi_pin: EBBCan:gpio8
spi_software_miso_pin: EBBCan:gpio11
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2


[tmc2209 extruder]
uart_pin: EBBCan:gpio20
run_current: 0.600
stealthchop_threshold: 999999

[fan_generic part_cooling_fan]
pin: EBBCan:gpio13
max_power: 1.0
shutdown_speed: 0
kick_start_time: 0.5


[heater_fan hotend_fan]
pin: EBBCan:gpio14
heater: extruder
heater_temp: 50.0


[neopixel btt_mini12864]
# To control Neopixel RGB in mini12864 display
pin: EBBCan:gpio16
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.2
initial_BLUE: 0.2
color_order: RGB

## Set RGB values on boot up for each Neopixel.
## Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=1.0 GREEN=0.2 BLUE=0.2 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=3

# [bltouch]    #NO BL Touch... Uses CNC Tap (probe) instead.
# sensor_pin: ^EBBCan:gpio21
# control_pin: EBBCan:gpio22


[safe_z_home]
home_xy_position: 175, 184                                  # Home Z from here.
speed: 100.                                                 # Move to homing location at this speed.
z_hop: 10                                                   # Raise first for safetyu if z not already homed
z_hop_speed: 20                                             # Raise at this speed.

[probe]
pin: !EBBCan:gpio22  # Used as Z-Endstop under [stepper_z]
x_offset: 0
y_offset: 0
# z_offset: 0     # Seems to work better on auto. (see auto configured section below.)
speed: 5.0
samples: 2
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.05
samples_tolerance_retries: 3

## THE BELOW CODE STOPS THE TAP HOMING INTO THE BED AT PROBE TEMPS OVER 150Â°C ##
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[adxl345]
cs_pin: EBBCan:gpio1
spi_software_sclk_pin: EBBCan:gpio2
spi_software_mosi_pin: EBBCan:gpio0
spi_software_miso_pin: EBBCan:gpio3
axes_map: z,-y,x

[resonance_tester]
probe_points: 175, 175, 50
accel_chip: adxl345


# [filament_switch_sensor runout_sensor]
# pause_on_runout: False
# runout_gcode:
#     # SET_DISPLAY_TEXT MSG="RUNOUT DETECTED"
#     # M118 ECHO:Filament Runout Detected!
#     # FILAMENT_NOTIFY MSG="Filament Runout Detected"
#     # SAVE_GCODE_STATE NAME=runout_state
#     # G90
#     # G1 X350 Y350
#     # G91
#     # G92 E0
#     # G1 E-60 F300
#     # RESTORE_GCODE_STATE NAME=runout_state
# insert_gcode:    
#     # SET_DISPLAY_TEXT MSG="FILAMENT DETECTED"
#     # M118 ECHO:Filament Inserted!
#     # FILAMENT_NOTIFY MSG="Filament Inserted"
#    # LOAD_FILAMENT
# pause_delay: 0.5  # Duration after filament loss to trigger pause.
# event_delay: 0.5  # Duration after filament insertion the system waits to consider filament present.
# switch_pin: EBBCan:gpio21

#####################################################################
#   Main Printer Hardware
#####################################################################
[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 6700    
max_z_velocity: 25
max_z_accel: 350
square_corner_velocity: 5.0

[heater_bed]
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PB1
max_power: 1.0
min_temp: 0
max_temp: 122

## X Stepper on Motor1 (B Motor rear left)
[stepper_x]
step_pin: PE6
dir_pin: PE5
enable_pin: !PC14
microsteps: 64
rotation_distance: 40
endstop_pin: EBBCan:gpio24
position_min: 0
position_max: 350
position_endstop: 350
homing_speed: 100   # Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC13
interpolate: False
run_current: 1.1
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on Motor2 (A Motor rear right)
[stepper_y]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
microsteps: 64
rotation_distance: 40
endstop_pin: ^PF3
position_min: 0
position_max: 355
position_endstop: 355
homing_speed: 100 # MAX 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PE3
interpolate: False
run_current: 1.1
sense_resistor: 0.110
stealthchop_threshold: 0

## Z0 Stepper - Front Left on MOTOR3
[stepper_z]
step_pin: PB8
dir_pin: PB7
enable_pin: !PE0
microsteps: 16
rotation_distance: 40
gear_ratio: 80:16
endstop_pin: probe:z_virtual_endstop
position_min: -5.0
position_max: 330
### Endstop is handled by TAP. See "probe" section.
#endstop_pin: ^PF2
#endstop_pin: ^PF5
#position_endstop: 0
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PB9
interpolate: True
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

#  Z1 Stepper - Rear Left on Motor4
[stepper_z1]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB6
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z1]
uart_pin: PB5
interpolate: True
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

## Z2 Stepper - Rear Right on Motor5
[stepper_z2]
step_pin: PG13
dir_pin: PG12
enable_pin: !PG15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z2]
uart_pin: PG14
interpolate: True
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

## Z3 Stepper - Front Right on Motor6
[stepper_z3]
step_pin: PG9
dir_pin: !PD7
enable_pin: !PG11
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PG10
interpolate: True
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

[quad_gantry_level]
gantry_corners:
    -60,-10
    410,420
points:        # Intentionally avoiding bed_mesh points, but don't get super close to the edge, or flex of the bed sheet can impact level.
    20,20
    20,330
    330,330
    330,20

speed: 5000
horizontal_move_z: 3
retries: 10
retry_tolerance: 0.01
max_adjust: 10

[bed_mesh]
speed: 5000
horizontal_move_z: 3
mesh_min: 25,25
mesh_max: 325,325
probe_count: 5,5
algorithm: bicubic
bicubic_tension: 0.2
zero_reference_position: 175, 175
fade_start: 1.0
fade_end: 10.0
adaptive_margin: 10

# No BLTouch or proximity switch.

[temperature_sensor pi_CM4]
sensor_type: temperature_host


[display]
# mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>
##------------------------------------------------------------------------

[idle_timeout]
timeout: 10800 # timeout in seconds (60/minute. 3600/hour)

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.3

#####################################################################
#   Macros
#####################################################################
[gcode_macro GLOBALS]
description: Define globals for use in various macros.
variable_center_x: 175        
variable_center_y: 175
variable_center_z: 175
variable_park_x: 175        
variable_park_y: 300
variable_park_z: 100
variable_z_close: 5
variable_shutdown_pause_temp: 65
variable_nevermore_state_on: 0
variable_printer_is_ready: 0

gcode:
    # SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=center_x VALUE=175        
    # SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=center_y VALUE=175
    # SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=center_z VALUE=175
   
    # SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=park_x VALUE=175        
    # SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=park_y VALUE=300
    # SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=park_z VALUE=100
   
    # SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=shutdown_pause_temp VALUE=65

    # SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=nevermore_state_on VALUE=0

    # SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=printer_is_ready VALUE=0
    

[gcode_macro FILAMENT_NOTIFY]
gcode:
  {% set msg = params.MSG|default("Unknown Filament Status") %}
  NOTIFY MSG="{msg}"



[gcode_macro LOAD_FILAMENT]
description: "Load filament"
gcode:
  SAVE_GCODE_STATE NAME=STATE_LOAD_FILAMENT
  {% set global = printer["gcode_macro GLOBALS"] %}

  # Ensure usable temperature
  {% if printer.extruder.temperature < 180 %}
    M104 S230                   ; Set hotend temperature to 200Â°C if below 180Â°C
    M109 S230                   ; Wait for hotend to reach 200Â°C
  {% endif %}
  
  M83                          ; Set extruder to relative mode
  G92 E0                       ; Zero the extruder
  G1 E10 F300                  ; Extrude 10mm of filament at 300mm/min
  G1 E50 F600                  ; Extrude 50mm of filament at 600mm/min
  G1 E50 F1200                 ; Extrude 50mm of filament at 1200mm/min
  G92 E0                       ; Zero the extruder again
  
  # M82                        ; Set extruder back to absolute mode
  RESTORE_GCODE_STATE NAME=STATE_LOAD_FILAMENT   # Restore state, mainly for relative vs. absolute positioning.


[gcode_macro UNLOAD_FILAMENT]
description: "Unload filament"
gcode:
  SAVE_GCODE_STATE NAME=STATE_UNLOAD_FILAMENT
  {% if printer.extruder.temperature < 180 %}
    M104 S230                   ; Set hotend temperature to 200Â°C if below 180Â°C
    M109 S230                   ; Wait for hotend to reach 200Â°C
  {% endif %}
  
  M83                          ; Set extruder to relative mode
  G92 E0                       ; Zero the extruder
  G1 E-5 F120                  ; Retract 5mm slowly to start
  G1 E-30 F300                 ; Retract 30mm at a moderate speed
  G1 E-50 F500                 ; Retract remaining filament
  G92 E0                       ; Zero the extruder again
  # M82                          ; Set extruder back to absolute mode
  RESTORE_GCODE_STATE NAME=STATE_UNLOAD_FILAMENT   # Restore state, mainly for relative vs. absolute positioning.

  

[gcode_macro CHANGE_FILAMENT]
gcode:
    UNLOAD_FILAMENT                                                        # Unload the current filament
    M117 Filament unloaded. Please insert new filament and resume.
    PAUSE                                                                  # Pause the printer to allow manual filament change
    RESUME                                                                 # Resume the printer after the user has changed the filament
    LOAD_FILAMENT                                                          # Load the new filament
    M117 Filament change complete.  # Display completion message


[gcode_macro PARK]
gcode:
    {% set global = printer["gcode_macro GLOBALS"] %}
    SAVE_GCODE_STATE NAME=STATE_PARK
    G90                                                                    # Use absolute positioning
    G0 X{global.park_x} Y{global.park_y} Z{global.park_z} F10000          # Move to PARK position.
    RESTORE_GCODE_STATE NAME=STATE_PARK                                    # Restore state, mainly for relative vs. absolute positioning.


[gcode_macro CENTER]
gcode:
    {% set global = printer["gcode_macro GLOBALS"] %}
    SAVE_GCODE_STATE NAME=STATE_CENTER
    G90                                                                    # Use absolute positioning
    G0 X{global.center_x} Y{global.center_y} Z{global.z_close} F10000      # Move to center position, close to bed.
    RESTORE_GCODE_STATE NAME=STATE_CENTER                                  # Restore state, mainly for relative vs. absolute positioning.


[gcode_macro NEVERMORE_ON]
description: Turns on Nevermore fan(s)
gcode:
    {% set global = printer["gcode_macro GLOBALS"] %}
    SET_FAN_SPEED FAN=nevermore_fan SPEED=1.0                                  # Nevermore on
    SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=nevermore_state_on VALUE=1    # Store the state of Nevermore, for conditionals in other macros.

   
[gcode_macro NEVERMORE_OFF]
description: Turns off Nevermore fan(s)
gcode:
    {% set global = printer["gcode_macro GLOBALS"] %}
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0                                    # Nevermore off
    SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=nevermore_state_on VALUE=0   # Store the state of Nevermore, for conditionals in other macros.

   
[gcode_macro HEATERS_OFF]
description: Turn off all heaters
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0                        # Turn off extruder heater
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0                      # Turn off bed heater


[gcode_macro CHAMBER_HEAT]
description: Heat the chamber by setting hotend and bed temperatures
gcode:
    # SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150                      # Set hotend temperature to 150C
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=105                    # Set bed temperature to 120C
   

[gcode_macro COOLING_FANS_ON]
description: Turn on all fans
gcode:
    SET_FAN_SPEED FAN=part_cooling_fan FAN_SPEED=1.0                         # Turn on the part cooling fan at full speed
#    SET_FAN_SPEED FAN=chamber_fan FAN_SPEED=1.0                                 # Turn on the bed fan at full speed
    # SET_FAN_SPEED FAN=hotend_fan FAN_SPEED=1.0                              # Turn on the hotend fan at full speed
   
[gcode_macro COOLING_FANS_OFF]
description: Turn off all fans
gcode:
    SET_FAN_SPEED FAN=part_cooling_fan FAN_SPEED=0                              # Turn on the part cooling fan at full speed
#    SET_FAN_SPEED FAN=chamber_fan FAN_SPEED=0                                   # Turn on the bed fan at full speed
    # SET_FAN_SPEED FAN=hotend_fan FAN_SPEED=0                                # Turn on the hotend fan at full speed
   

[gcode_macro OFF]
description: Turn off the printer, leaving fans and Nevermore on temporarily as appropriate.
gcode:
    {% set global = printer["gcode_macro GLOBALS"] %}
    HEATERS_OFF
    COOLING_FANS_ON
   
    # If temperatures are high or Nevermore is on, give 2 minutes for cooling and air filtering.
    {% if printer.extruder.temperature > global.shutdown_pause_temp or
           printer.heater_bed.temperature > global.shutdown_pause_temp or
           global.nevermore_state_on == 1 %}
    G4 P120000  # Wait for 2 minutes
    {% endif %}
  
    COOLING_FANS_OFF
    NEVERMORE_OFF
    M84  # Turn off all stepper motors
    M81  # Turn off power supply (requires hardware support)


[gcode_macro HOME_AND_LIFT]
description: Home all axes from center positions where relevant.
gcode:
    {% set global = printer["gcode_macro GLOBALS"] %}
    SAVE_GCODE_STATE NAME=STATE_HOME_AND_LIFT
    G90                                                                # Use absolute positioning
    G28
    G0 Z{global.z_close} F1000                                         # Lift extruder off the bed
    G28 X                                                              # Redo X from the middle.
    RESTORE_GCODE_STATE NAME=STATE_HOME_AND_LIFT                       # Restore state, mainly for relative vs. absolute positioning.


[gcode_macro FULL_QGL]
description: Perform quad gantry leveling with homing
gcode:
    {% set global = printer["gcode_macro GLOBALS"] %}
    SET_DISPLAY_TEXT MSG="HOMING ALL"                                  # Displays info
    HOME_AND_LIFT
    SET_DISPLAY_TEXT MSG="QUAD GANTRY LEVELING"                        # Displays info
    QUAD_GANTRY_LEVEL
    SET_DISPLAY_TEXT MSG="RE-HOMING ALL (FOR SOME REASON?)"            # Displays info
    HOME_AND_LIFT                                                      # Home all axes again, after QGL.   (WHY???)


[gcode_macro PRINT_START_SETUP]
gcode:
    {% set global = printer["gcode_macro GLOBALS"] %}
    FULL_QGL                                                      # Quad gantry leveling with homing.
    SET_DISPLAY_TEXT MSG="BED MESHING"                            # Displays info
    BED_MESH_CLEAR                                                # Clears old saved bed mesh (if any)
    BED_MESH_CALIBRATE                                            # Do bed mesh according to bed_mesh config section.
    BED_MESH_PROFILE SAVE=Current_Mesh                            # Save bed mesh to a specific profile
    G0 Z5   F10000                                                # Lift off of the build plate
    SET_GCODE_VARIABLE MACRO=GLOBALS VARIABLE=printer_is_ready VALUE=1   # Flag thast we're ready to expedite printing.


[gcode_macro PRINT_START]
gcode:
    {% set global = printer["gcode_macro GLOBALS"] %}
    SET_FAN_SPEED FAN=motor_driver_fan SPEED=1.0        
    
    G90                                                                  # Use absolute positioning
   
    SET_DISPLAY_TEXT MSG="Printing..."                                   # Displays info
    {% set target_bed = params.BED|int %}
    # {% set target_chamber = params.CHAMBER|default("40")|int %}        <--- Off pending Chamber probe
    {% set target_extruder = params.EXTRUDER|int %}                      # Moving this here in hopes it will stop heating prematurely.
  
    # CHAMBER_HEAT                                                       # Begin warming the chamber A.S.A.P.
    M140 S{target_bed}

    # Do setup only if needed.
    {% if (global.printer_is_ready == 1 and
           'x' in printer.toolhead.homed_axes and
           'y' in printer.toolhead.homed_axes and
           'z' in printer.toolhead.homed_axes and
           'bed_mesh' in printer and 
           printer.bed_mesh.profile_name != "") %}
      SET_DISPLAY_TEXT MSG="Skipping setup, printer is ready"
    {% else %}
      PRINT_START_SETUP
    {% endif %}
 
    SET_DISPLAY_TEXT MSG="Hotend Set To: {target_extruder}c"             # Displays info
    M107                                                                 # Turn off partcooling fan
    M109 S{target_extruder}                                              # Heat the nozzle to printing temp
  
    # Purge
    G0 X125 Y0 Z27 F5000                            # Move to front-left corner of the bed at Z=27
    G0 X150 Y0 Z2 F5000                              # Move right while lowering Z

    G1 E4 F300                                      # Start extrusion to prime the nozzle
    G1 X175 Y0 Z0.5 E20 F300                        # Extrude 20mm of filament while moving to (X200 Y0 Z0.5)
    G0 X185 Z0 F300                                 # Wipe the nozzle on the bed.
    G0 X200 Y0 Z5 F5000
    G0 X250 Y0 Z3 F5000
    
[gcode_macro EXTRUDE_100MM]
gcode:
  SAVE_GCODE_STATE NAME=EXTRUDE_100MM_STATE
  M83 ; Set extruder to relative mode
  G92 E0 ; Reset extruder position to zero
  G1 E100 F120 ; Extrude 100mm of filament
  G92 E0 ; Reset extruder position to zero again (optional)
  RESTORE_GCODE_STATE NAME=EXTRUDE_100MM_STATE

  
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    {% set global = printer["gcode_macro GLOBALS"] %}
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
   
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
   
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
     
    HEATERS_OFF
   
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F10000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F10000  ; park nozzle at rear
    M107                                     ; turn off fan

    SET_FAN_SPEED FAN=motor_driver_fan SPEED=1.0        
   
    SET_DISPLAY_TEXT MSG="JOB 100% COMPLETE"          # Displays info
    OFF
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[gcode_macro M106]
gcode:
    {% if 'S' in params %}
        SET_FAN_SPEED FAN=part_cooling_fan SPEED={params.S|float / 255.0}
    {% else %}
        SET_FAN_SPEED FAN=part_cooling_fan SPEED=1.0
    {% endif %}


[gcode_macro M107]
gcode:
    SET_FAN_SPEED FAN=part_cooling_fan SPEED=0




#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 61.009
#*# pid_ki = 2.947
#*# pid_kd = 315.723
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.162
#*# pid_ki = 2.592
#*# pid_kd = 47.369
#*#
#*# [probe]
#*# z_offset = -0.901
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.051250, 0.070000, 0.037500, 0.035000, 0.055000
#*# 	  0.062500, 0.075000, 0.046250, 0.045000, 0.071250
#*# 	  0.008750, 0.012500, 0.000000, -0.005000, 0.031250
#*# 	  -0.011250, 0.007500, -0.020000, -0.023750, 0.011250
#*# 	  0.040000, 0.048750, 0.010000, 0.022500, 0.038750
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 325.0
#*# min_y = 25.0
#*# max_y = 325.0
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 50.4
#*# shaper_type_y = zv
#*# shaper_freq_y = 37.6
#*#
#*# [bed_mesh Current_Mesh]
#*# version = 1
#*# points =
#*# 	  0.051250, 0.070000, 0.037500, 0.035000, 0.055000
#*# 	  0.062500, 0.075000, 0.046250, 0.045000, 0.071250
#*# 	  0.008750, 0.012500, 0.000000, -0.005000, 0.031250
#*# 	  -0.011250, 0.007500, -0.020000, -0.023750, 0.011250
#*# 	  0.040000, 0.048750, 0.010000, 0.022500, 0.038750
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 325.0
#*# min_y = 25.0
#*# max_y = 325.0
